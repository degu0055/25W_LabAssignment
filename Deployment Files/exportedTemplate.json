{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "accounts_degu0_m93wtda3_eastus2_name": {
      "type": "String"
    },
    "accounts_degu0_m93wunux_swedencentral_name": {
      "type": "String"
    },
    "accounts_myOpenAIResource_name": {
      "type": "String"
    },
    "databaseAccounts_bestbuycosmo_name": {
      "type": "String"
    },
    "managedClusters_BestBuyCluster_name": {
      "type": "String"
    },
    "namespaces_BestBuyNamespace_name": {
      "type": "String"
    },
    "publicIPAddresses_4389b6a6_865a_451b_a533_5bfb72fa11a2_externalid": {
      "type": "String"
    },
    "userAssignedIdentities_BestBuyCluster_agentpool_externalid": {
      "type": "String"
    }
  },
  "resources": [
    {
      "apiVersion": "2024-10-01",
      "kind": "AIServices",
      "location": "eastus2",
      "name": "[parameters('accounts_degu0_m93wtda3_eastus2_name')]",
      "properties": {
        "customSubDomainName": "[parameters('accounts_degu0_m93wtda3_eastus2_name')]",
        "publicNetworkAccess": "Enabled"
      },
      "sku": {
        "name": "S0"
      },
      "type": "Microsoft.CognitiveServices/accounts"
    },
    {
      "apiVersion": "2024-10-01",
      "kind": "AIServices",
      "location": "swedencentral",
      "name": "[parameters('accounts_degu0_m93wunux_swedencentral_name')]",
      "properties": {
        "customSubDomainName": "[parameters('accounts_degu0_m93wunux_swedencentral_name')]",
        "publicNetworkAccess": "Enabled"
      },
      "sku": {
        "name": "S0"
      },
      "type": "Microsoft.CognitiveServices/accounts"
    },
    {
      "apiVersion": "2024-10-01",
      "kind": "OpenAI",
      "location": "eastus",
      "name": "[parameters('accounts_myOpenAIResource_name')]",
      "properties": {
        "apiProperties": {},
        "publicNetworkAccess": "Enabled"
      },
      "sku": {
        "name": "S0"
      },
      "type": "Microsoft.CognitiveServices/accounts"
    },
    {
      "apiVersion": "2024-10-01",
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "canadacentral",
      "name": "[parameters('managedClusters_BestBuyCluster_name')]",
      "properties": {
        "agentPoolProfiles": [
          {
            "count": 1,
            "enableAutoScaling": false,
            "enableEncryptionAtHost": false,
            "enableFIPS": false,
            "enableNodePublicIP": false,
            "enableUltraSSD": false,
            "kubeletDiskType": "OS",
            "maxPods": 30,
            "mode": "System",
            "name": "masterpool",
            "orchestratorVersion": "1.30",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "osSKU": "Ubuntu",
            "osType": "Linux",
            "powerState": {
              "code": "Running"
            },
            "scaleDownMode": "Delete",
            "securityProfile": {
              "enableSecureBoot": false,
              "enableVTPM": false
            },
            "type": "VirtualMachineScaleSets",
            "upgradeSettings": {
              "maxSurge": "10%"
            },
            "vmSize": "Standard_D2as_v4"
          },
          {
            "count": 1,
            "enableAutoScaling": false,
            "enableEncryptionAtHost": false,
            "enableFIPS": false,
            "enableNodePublicIP": false,
            "enableUltraSSD": false,
            "kubeletDiskType": "OS",
            "maxPods": 30,
            "mode": "User",
            "name": "workerspool",
            "orchestratorVersion": "1.30",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "osSKU": "Ubuntu",
            "osType": "Linux",
            "powerState": {
              "code": "Running"
            },
            "scaleDownMode": "Delete",
            "securityProfile": {
              "enableSecureBoot": false,
              "enableVTPM": false
            },
            "type": "VirtualMachineScaleSets",
            "upgradeSettings": {},
            "vmSize": "Standard_D2as_v4"
          }
        ],
        "autoUpgradeProfile": {
          "nodeOSUpgradeChannel": "NodeImage"
        },
        "disableLocalAccounts": false,
        "dnsPrefix": "BestBuyClu-BestBuyRg-cdb9bd",
        "enableRBAC": true,
        "identityProfile": {
          "kubeletidentity": {
            "clientId": "6bdab75a-a3ed-4034-98ee-6dddf60a465d",
            "objectId": "4d2208ec-d14b-4d28-a1dd-7bc653770efc",
            "resourceId": "[parameters('userAssignedIdentities_BestBuyCluster_agentpool_externalid')]"
          }
        },
        "kubernetesVersion": "1.30",
        "linuxProfile": {
          "adminUsername": "azureuser",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzro8puZDO/vWA7ujAGS1yP0j27mPAAjay7aMsY4X3mpCWPVGZZanQnaWo+rQQUqiD3btTB5uH43FAoEBpwnh2prgYspXBN6wzznmTOXSVF048Ia/bUnbQS4HBkyVresY+v+zfyCYYBbERuSsunEpKoKySpic9CYL0SA9etUYaYWH4pBCHDkLctrK6xXmKPYGO09IO7uZKQUB1/nDJikvBSWbgfjeKEYUkMXmunEi6/+idmy7rNZ5BkW/d/gG2OEpaR8OBACdQo2eK4yLbIJqtyWiswQ0X1p/WPMi6JdCsPryL5PJ2R/al5mmFHamwbrGmTD+1LYumccY7oBiRMTpfR4g/ucNortb+5rkJqqMbAiKoE6kNaAc7a3jK6s6xnf+mS1FbyQvEYzbNl1bknnml0v4aQB1QHDoua7/XO+Sy3SaNXw+15imso9r5NrIyF2Hl5oFqMDIQ5+xWmMvnTfWdpb7xI0qlgJioi/2GWGVFa2mFbp9jiQBg1LmbS4dTAS0="
              }
            ]
          }
        },
        "metricsProfile": {
          "costAnalysis": {
            "enabled": false
          }
        },
        "networkProfile": {
          "dnsServiceIP": "10.0.0.10",
          "ipFamilies": [
            "IPv4"
          ],
          "loadBalancerProfile": {
            "backendPoolType": "nodeIPConfiguration",
            "effectiveOutboundIPs": [
              {
                "id": "[parameters('publicIPAddresses_4389b6a6_865a_451b_a533_5bfb72fa11a2_externalid')]"
              }
            ],
            "managedOutboundIPs": {
              "count": 1
            }
          },
          "loadBalancerSku": "standard",
          "networkDataplane": "azure",
          "networkPlugin": "azure",
          "networkPolicy": "none",
          "outboundType": "loadBalancer",
          "serviceCidr": "10.0.0.0/16",
          "serviceCidrs": [
            "10.0.0.0/16"
          ]
        },
        "nodeResourceGroup": "[concat('MC_BestBuyRg_', parameters('managedClusters_BestBuyCluster_name'), '_canadacentral')]",
        "oidcIssuerProfile": {
          "enabled": false
        },
        "securityProfile": {},
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "storageProfile": {
          "diskCSIDriver": {
            "enabled": true
          },
          "fileCSIDriver": {
            "enabled": true
          },
          "snapshotController": {
            "enabled": true
          }
        },
        "supportPlan": "KubernetesOfficial",
        "windowsProfile": {
          "adminUsername": "azureuser",
          "enableCSIProxy": true
        },
        "workloadAutoScalerProfile": {}
      },
      "sku": {
        "name": "Base",
        "tier": "Free"
      },
      "type": "Microsoft.ContainerService/managedClusters"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "identity": {
        "type": "None"
      },
      "kind": "GlobalDocumentDB",
      "location": "Canada Central",
      "name": "[parameters('databaseAccounts_bestbuycosmo_name')]",
      "properties": {
        "analyticalStorageConfiguration": {
          "schemaType": "WellDefined"
        },
        "backupPolicy": {
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Geo"
          },
          "type": "Periodic"
        },
        "capabilities": [],
        "capacityMode": "Provisioned",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "cors": [],
        "databaseAccountOfferType": "Standard",
        "defaultIdentity": "FirstPartyIdentity",
        "defaultPriorityLevel": "High",
        "diagnosticLogSettings": {
          "enableFullTextQuery": "None"
        },
        "disableKeyBasedMetadataWriteAccess": false,
        "disableLocalAuth": false,
        "enableAnalyticalStorage": false,
        "enableAutomaticFailover": false,
        "enableBurstCapacity": false,
        "enableFreeTier": false,
        "enableMaterializedViews": false,
        "enableMultipleWriteLocations": false,
        "enablePartitionMerge": false,
        "enablePerRegionPerPartitionAutoscale": true,
        "enablePriorityBasedExecution": false,
        "ipRules": [],
        "isVirtualNetworkFilterEnabled": false,
        "locations": [
          {
            "failoverPriority": 0,
            "isZoneRedundant": false,
            "locationName": "Canada Central"
          }
        ],
        "minimalTlsVersion": "Tls12",
        "networkAclBypass": "None",
        "networkAclBypassResourceIds": [],
        "publicNetworkAccess": "Enabled",
        "virtualNetworkRules": []
      },
      "type": "Microsoft.DocumentDB/databaseAccounts"
    },
    {
      "apiVersion": "2024-01-01",
      "location": "canadacentral",
      "name": "[parameters('namespaces_BestBuyNamespace_name')]",
      "properties": {
        "disableLocalAuth": false,
        "minimumTlsVersion": "1.2",
        "premiumMessagingPartitions": 0,
        "publicNetworkAccess": "Enabled",
        "zoneRedundant": true
      },
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "type": "Microsoft.ServiceBus/namespaces"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wtda3_eastus2_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wtda3_eastus2_name'), '/Default')]",
      "properties": {
        "state": "Disabled"
      },
      "type": "Microsoft.CognitiveServices/accounts/defenderForAISettings"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wunux_swedencentral_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wunux_swedencentral_name'), '/Default')]",
      "properties": {
        "state": "Disabled"
      },
      "type": "Microsoft.CognitiveServices/accounts/defenderForAISettings"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_myOpenAIResource_name'))]"
      ],
      "name": "[concat(parameters('accounts_myOpenAIResource_name'), '/Default')]",
      "properties": {
        "state": "Disabled"
      },
      "type": "Microsoft.CognitiveServices/accounts/defenderForAISettings"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wunux_swedencentral_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wunux_swedencentral_name'), '/dall-e-3')]",
      "properties": {
        "currentCapacity": 1,
        "model": {
          "format": "OpenAI",
          "name": "dall-e-3",
          "version": "3.0"
        },
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable"
      },
      "sku": {
        "capacity": 1,
        "name": "Standard"
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wtda3_eastus2_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wtda3_eastus2_name'), '/gpt-4')]",
      "properties": {
        "currentCapacity": 1,
        "model": {
          "format": "OpenAI",
          "name": "gpt-4",
          "version": "turbo-2024-04-09"
        },
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable"
      },
      "sku": {
        "capacity": 1,
        "name": "GlobalStandard"
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wunux_swedencentral_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wunux_swedencentral_name'), '/gpt-4-2')]",
      "properties": {
        "currentCapacity": 1,
        "model": {
          "format": "OpenAI",
          "name": "gpt-4",
          "version": "turbo-2024-04-09"
        },
        "raiPolicyName": "Microsoft.DefaultV2",
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable"
      },
      "sku": {
        "capacity": 1,
        "name": "GlobalStandard"
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wtda3_eastus2_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wtda3_eastus2_name'), '/Microsoft.Default')]",
      "properties": {
        "contentFilters": [
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Completion"
          }
        ],
        "mode": "Blocking"
      },
      "type": "Microsoft.CognitiveServices/accounts/raiPolicies"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wunux_swedencentral_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wunux_swedencentral_name'), '/Microsoft.Default')]",
      "properties": {
        "contentFilters": [
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Completion"
          }
        ],
        "mode": "Blocking"
      },
      "type": "Microsoft.CognitiveServices/accounts/raiPolicies"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_myOpenAIResource_name'))]"
      ],
      "name": "[concat(parameters('accounts_myOpenAIResource_name'), '/Microsoft.Default')]",
      "properties": {
        "contentFilters": [
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Completion"
          }
        ],
        "mode": "Blocking"
      },
      "type": "Microsoft.CognitiveServices/accounts/raiPolicies"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wtda3_eastus2_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wtda3_eastus2_name'), '/Microsoft.DefaultV2')]",
      "properties": {
        "contentFilters": [
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Jailbreak",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Protected Material Text",
            "source": "Completion"
          },
          {
            "blocking": false,
            "enabled": true,
            "name": "Protected Material Code",
            "source": "Completion"
          }
        ],
        "mode": "Blocking"
      },
      "type": "Microsoft.CognitiveServices/accounts/raiPolicies"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_degu0_m93wunux_swedencentral_name'))]"
      ],
      "name": "[concat(parameters('accounts_degu0_m93wunux_swedencentral_name'), '/Microsoft.DefaultV2')]",
      "properties": {
        "contentFilters": [
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Jailbreak",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Protected Material Text",
            "source": "Completion"
          },
          {
            "blocking": false,
            "enabled": true,
            "name": "Protected Material Code",
            "source": "Completion"
          }
        ],
        "mode": "Blocking"
      },
      "type": "Microsoft.CognitiveServices/accounts/raiPolicies"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_myOpenAIResource_name'))]"
      ],
      "name": "[concat(parameters('accounts_myOpenAIResource_name'), '/Microsoft.DefaultV2')]",
      "properties": {
        "contentFilters": [
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Hate",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Sexual",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Violence",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Selfharm",
            "severityThreshold": "Medium",
            "source": "Completion"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Jailbreak",
            "source": "Prompt"
          },
          {
            "blocking": true,
            "enabled": true,
            "name": "Protected Material Text",
            "source": "Completion"
          },
          {
            "blocking": false,
            "enabled": true,
            "name": "Protected Material Code",
            "source": "Completion"
          }
        ],
        "mode": "Blocking"
      },
      "type": "Microsoft.CognitiveServices/accounts/raiPolicies"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_BestBuyCluster_name'))]"
      ],
      "name": "[concat(parameters('managedClusters_BestBuyCluster_name'), '/masterpool')]",
      "properties": {
        "count": 1,
        "enableAutoScaling": false,
        "enableEncryptionAtHost": false,
        "enableFIPS": false,
        "enableNodePublicIP": false,
        "enableUltraSSD": false,
        "kubeletDiskType": "OS",
        "maxPods": 30,
        "mode": "System",
        "orchestratorVersion": "1.30",
        "osDiskSizeGB": 128,
        "osDiskType": "Managed",
        "osSKU": "Ubuntu",
        "osType": "Linux",
        "powerState": {
          "code": "Running"
        },
        "scaleDownMode": "Delete",
        "securityProfile": {
          "enableSecureBoot": false,
          "enableVTPM": false
        },
        "type": "VirtualMachineScaleSets",
        "upgradeSettings": {
          "maxSurge": "10%"
        },
        "vmSize": "Standard_D2as_v4"
      },
      "type": "Microsoft.ContainerService/managedClusters/agentPools"
    },
    {
      "apiVersion": "2024-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_BestBuyCluster_name'))]"
      ],
      "name": "[concat(parameters('managedClusters_BestBuyCluster_name'), '/workerspool')]",
      "properties": {
        "count": 1,
        "enableAutoScaling": false,
        "enableEncryptionAtHost": false,
        "enableFIPS": false,
        "enableNodePublicIP": false,
        "enableUltraSSD": false,
        "kubeletDiskType": "OS",
        "maxPods": 30,
        "mode": "User",
        "orchestratorVersion": "1.30",
        "osDiskSizeGB": 128,
        "osDiskType": "Managed",
        "osSKU": "Ubuntu",
        "osType": "Linux",
        "powerState": {
          "code": "Running"
        },
        "scaleDownMode": "Delete",
        "securityProfile": {
          "enableSecureBoot": false,
          "enableVTPM": false
        },
        "type": "VirtualMachineScaleSets",
        "upgradeSettings": {},
        "vmSize": "Standard_D2as_v4"
      },
      "type": "Microsoft.ContainerService/managedClusters/agentPools"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
      ],
      "name": "[concat(parameters('databaseAccounts_bestbuycosmo_name'), '/00000000-0000-0000-0000-000000000001')]",
      "properties": {
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
            ],
            "notDataActions": []
          }
        ],
        "roleName": "Cosmos DB Built-in Data Reader",
        "type": "BuiltInRole"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
      ],
      "name": "[concat(parameters('databaseAccounts_bestbuycosmo_name'), '/00000000-0000-0000-0000-000000000002')]",
      "properties": {
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
            ],
            "notDataActions": []
          }
        ],
        "roleName": "Cosmos DB Built-in Data Contributor",
        "type": "BuiltInRole"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
      ],
      "name": "[concat(parameters('databaseAccounts_bestbuycosmo_name'), '/d75d9595-f646-446c-aa2c-540e97c19a87')]",
      "properties": {
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
            ],
            "notDataActions": []
          }
        ],
        "roleName": "MyCosmosDBDataContributor",
        "type": "CustomRole"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
      ],
      "name": "[concat(parameters('databaseAccounts_bestbuycosmo_name'), '/00000000-0000-0000-0000-000000000001')]",
      "properties": {
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/tables/containers/executeQuery",
              "Microsoft.DocumentDB/databaseAccounts/tables/containers/readChangeFeed",
              "Microsoft.DocumentDB/databaseAccounts/tables/containers/entities/read"
            ],
            "notDataActions": []
          }
        ],
        "roleName": "Cosmos DB Built-in Data Reader",
        "type": "BuiltInRole"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/tableRoleDefinitions"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
      ],
      "name": "[concat(parameters('databaseAccounts_bestbuycosmo_name'), '/00000000-0000-0000-0000-000000000002')]",
      "properties": {
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/tables/*",
              "Microsoft.DocumentDB/databaseAccounts/tables/containers/*",
              "Microsoft.DocumentDB/databaseAccounts/tables/containers/entities/*"
            ],
            "notDataActions": []
          }
        ],
        "roleName": "Cosmos DB Built-in Data Contributor",
        "type": "BuiltInRole"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/tableRoleDefinitions"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_BestBuyNamespace_name'))]"
      ],
      "location": "canadacentral",
      "name": "[concat(parameters('namespaces_BestBuyNamespace_name'), '/listener')]",
      "properties": {
        "rights": [
          "Listen"
        ]
      },
      "type": "Microsoft.ServiceBus/namespaces/authorizationrules"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_BestBuyNamespace_name'))]"
      ],
      "location": "canadacentral",
      "name": "[concat(parameters('namespaces_BestBuyNamespace_name'), '/RootManageSharedAccessKey')]",
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      },
      "type": "Microsoft.ServiceBus/namespaces/authorizationrules"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_BestBuyNamespace_name'))]"
      ],
      "location": "canadacentral",
      "name": "[concat(parameters('namespaces_BestBuyNamespace_name'), '/default')]",
      "properties": {
        "defaultAction": "Allow",
        "ipRules": [],
        "publicNetworkAccess": "Enabled",
        "trustedServiceAccessEnabled": false,
        "virtualNetworkRules": []
      },
      "type": "Microsoft.ServiceBus/namespaces/networkrulesets"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_BestBuyNamespace_name'))]"
      ],
      "location": "canadacentral",
      "name": "[concat(parameters('namespaces_BestBuyNamespace_name'), '/orders')]",
      "properties": {
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "deadLetteringOnMessageExpiration": false,
        "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "enableBatchedOperations": true,
        "enableExpress": false,
        "enablePartitioning": false,
        "lockDuration": "PT1M",
        "maxDeliveryCount": 10,
        "maxMessageSizeInKilobytes": 256,
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": false,
        "status": "Active"
      },
      "type": "Microsoft.ServiceBus/namespaces/queues"
    },
    {
      "apiVersion": "2024-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('databaseAccounts_bestbuycosmo_name'), 'd75d9595-f646-446c-aa2c-540e97c19a87')]"
      ],
      "name": "[concat(parameters('databaseAccounts_bestbuycosmo_name'), '/5ed91362-ff32-408f-8882-1c271e08bbf4')]",
      "properties": {
        "principalId": "10c0eeaf-adbf-456c-88cf-5e920ea25b56",
        "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('databaseAccounts_bestbuycosmo_name'), 'd75d9595-f646-446c-aa2c-540e97c19a87')]",
        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_bestbuycosmo_name'))]"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments"
    },
    {
      "apiVersion": "2024-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('namespaces_BestBuyNamespace_name'), 'orders')]",
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_BestBuyNamespace_name'))]"
      ],
      "location": "canadacentral",
      "name": "[concat(parameters('namespaces_BestBuyNamespace_name'), '/orders/sender')]",
      "properties": {
        "rights": [
          "Manage",
          "Listen",
          "Send"
        ]
      },
      "type": "Microsoft.ServiceBus/namespaces/queues/authorizationrules"
    }
  ],
  "variables": {}
}
